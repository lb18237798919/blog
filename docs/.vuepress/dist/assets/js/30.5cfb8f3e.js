(window.webpackJsonp=window.webpackJsonp||[]).push([[30],{390:function(t,s,a){"use strict";a.r(s);var n=a(42),r=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"变量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#变量"}},[t._v("#")]),t._v(" 变量")]),t._v(" "),a("p",[t._v("还记得从会写"),a("code",[t._v("hello world")]),t._v("开始，就在使用变量，随着学习的深入，变量一直伴随我左右。我曾多次想深入了解变量，可却始终难以越过的重重阻碍。可当我不断深入挖掘之后，我才发现，变量这个看似最简单的知识，也只是从波澜壮阔的计算机海洋中浮现出来的冰山一角，或许很久以后才能探究其中的奥妙。现在的我只能对js的变量做一个简单的总结。")]),t._v(" "),a("p",[t._v("在ES5声明变量只有两种方式： var 和 function\n在ES6中声明变量有四种方式：let、const、import、class")]),t._v(" "),a("p",[t._v("我所知道的"),a("code",[t._v("var")]),t._v("声明变量和"),a("code",[t._v("let、const")]),t._v("声明变量有5个区别：")]),t._v(" "),a("h2",{attrs:{id:"var-和-let-const-的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#var-和-let-const-的区别"}},[t._v("#")]),t._v(" var 和 let / const 的区别")]),t._v(" "),a("h3",{attrs:{id:"_1-在-全局作用域下-var-声明的变量会挂载在-window-上-而-let-和-const-声明的变量不会。"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-在-全局作用域下-var-声明的变量会挂载在-window-上-而-let-和-const-声明的变量不会。"}},[t._v("#")]),t._v(" 1. 在 "),a("font",{attrs:{color:"#3EAF7C"}},[a("strong",[t._v("全局作用域下")])]),t._v(" var 声明的变量会挂载在 window 上，而 let 和 const 声明的变量不会。")],1),t._v(" "),a("p",[t._v("原因是，浏览器环境中的顶层对象是 window，而 window 这个全局对象在ES5中和变量存在一定的映射机制。所以所有JS全局对象、函数、以及变量都会自动成为 window 对象的属性。ES6中新增的变量似乎取消了与 window 的映射机制，因此不会成为 window 的属性。")]),t._v(" "),a("p",[t._v("但虽然ES5声明的变量与window有映射机制，但window对象的属性还是和全局变量有所不同，如下：")]),t._v(" "),a("p",[a("strong",[t._v("区别一：全局变量不能通过delete删除，而window对象的属性可以通过delete删除")]),t._v("：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nb "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("delete")]),t._v(" a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("delete")]),t._v(" b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//1")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//Uncaught ReferenceError: b is not defined")]),t._v("\n")])])]),a("p",[t._v("而不能删除的原因是var语句添加的全局变量有一个 "),a("font",{attrs:{color:"#FA8072"}},[t._v("configurable")]),t._v(" 属性，而这个属性的属性值是一个 "),a("font",{attrs:{color:"#3EAF7C"}},[a("strong",[t._v("布尔值")])]),t._v("，表示的是：指定对象的属性描述可以被改变或者属性可被删除时，为 true。而var语句添加的全局变量的 "),a("font",{attrs:{color:"#FA8072"}},[t._v("configurable")]),t._v(" 属性的属性值为false,所以不能删除，如下：")],1),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Object"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getOwnPropertyDescriptor")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("window"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"a"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//{value: 1, writable: true, enumerable: true, configurable: false}")]),t._v("\n\nb "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Object"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getOwnPropertyDescriptor")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("window"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"b"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//{value: 2, writable: true, enumerable: true, configurable: true}")]),t._v("\n")])])]),a("p",[a("strong",[t._v("区别二")]),a("br"),t._v("\n在函数中使用var定义的变量是局部变量。"),a("br"),t._v("\n有时想要在外部也访问到函数里面的变量，就需要定义window对象属性。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("123")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\twindow"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("b "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("456")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//a is not defined")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//456")]),t._v("\n")])])]),a("h3",{attrs:{id:"_2-var-声明变量进行的变量提升得到的是undefined-let-和-const-声明的变量提升会抛出referenceerror错误。"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-var-声明变量进行的变量提升得到的是undefined-let-和-const-声明的变量提升会抛出referenceerror错误。"}},[t._v("#")]),t._v(" 2. var 声明变量进行的变量提升得到的是undefined，let 和 const 声明的变量提升会抛出ReferenceError错误。")]),t._v(" "),a("p",[t._v("之前我一直以为 "),a("font",{attrs:{color:"#FA8072"}},[t._v("let和const")]),t._v(" 不存在变量提升，但据我搜集了一些这方面的知识后，发现 "),a("font",{attrs:{color:"#FA8072"}},[t._v("let和const")]),t._v(" 声明的变量也是会有提升(hoist)的作用,只是因为 "),a("font",{attrs:{color:"#FA8072"}},[t._v("TDZ")]),t._v(" (在下文中会讲到)的作用，会抛出会抛出 "),a("font",{attrs:{color:"#FA8072"}},[t._v("ReferenceError")]),t._v(" 错误.")],1),t._v(" "),a("p",[t._v("变量提升到底是怎么产生的呢？对于此类概念，我也看了许多大佬的博客，想从ES5来阐述，但始终有个窗户纸捅不破，说不清，那么我就用ES3的概念来说明变量提升到底是怎么回事。据我了解ES3中代码的整个执行过程，分为两个阶段，"),a("font",{attrs:{color:"#3EAF7C"}},[a("strong",[t._v("代码编译阶段")])]),t._v(" 和"),a("font",{attrs:{color:"#3EAF7C"}},[a("strong",[t._v("代码执行阶段")])]),t._v("。执行阶段由js引擎完成，js引擎会进行：执行上下文创建，代码执行，垃圾回收。而对于执行上下文也分为 "),a("font",{attrs:{color:"#3EAF7C"}},[a("strong",[t._v("创建阶段")])]),t._v(" 和执行阶段。在执行上下文的创建阶段，会进行 "),a("font",{attrs:{color:"#3EAF7C"}},[a("strong",[t._v("变量对象")])]),t._v(" 的创建，创建作用域链，以及确定this的指向。变量对象的创建过程分为三步：")],1),t._v(" "),a("ol",[a("li",[t._v("参数对象创建，建立 "),a("font",{attrs:{color:"#FA8072"}},[t._v("arguments")]),t._v(" 对象，检查当前上下文中的参数，建立改对象下的属性和属性值。")],1),t._v(" "),a("li",[t._v("函数声明。检查当前上下文的函数声明。在变量对象中以函数名创建一个属性，属性值为指向改函数所在内存地址的引用。如果函数名的属性已经存在，那么该属性将会被新的引用所覆盖。")]),t._v(" "),a("li",[t._v("变量声明。检查当前上下文中的变量声明，每找到一个变量声明，就在变量对象中以变量名创建一个属性，"),a("font",{attrs:{color:"#000000"}},[a("strong",[t._v("属性值为undefined")])]),t._v("，如果该变量属性以及存在，为了防止同名函数被修改为undefined，则会直接跳过，原属性值不会被修改。")],1)]),t._v(" "),a("p",[t._v("以上就是我认为变量提升产生的原因，对于 var 会产生变量提升这可并不是什么好事，为了纠正这种现象，let 命令改变了语法行为，它所声明的变量一定要在声明后使用，否则报错。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//undefined")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//Uncaught ReferenceError")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" b "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h3",{attrs:{id:"_3-let和const会声明形成块作用域-而var不会"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-let和const会声明形成块作用域-而var不会"}},[t._v("#")]),t._v(" 3.let和const会声明形成块作用域，而var不会")]),t._v(" "),a("p",[t._v("因为在ES5中只有 "),a("font",{attrs:{color:"#3EAF7C"}},[a("strong",[t._v("全局作用域")])]),t._v(" 和 "),a("font",{attrs:{color:"#FA8072"}},[t._v("函数作用域")]),t._v("，这是设计的缺陷，由于没有块作用域，因此带来了许多不合理的场景。"),a("br"),t._v(" "),a("strong",[t._v("第一种场景，内层变量可能会覆盖外层的变量。")])],1),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("fn")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("fn")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//undefined")]),t._v("\n")])])]),a("p",[t._v("上面代码的意图是，"),a("font",{attrs:{color:"#FA8072"}},[t._v("if")]),t._v(" 代码块的外部使用全局变量，"),a("font",{attrs:{color:"#FA8072"}},[t._v("if")]),t._v(" 内部使用局部变量。当 "),a("font",{attrs:{color:"#FA8072"}},[t._v("fn")]),t._v(" 函数执行的时候，由于变量提升，导致 "),a("font",{attrs:{color:"#FA8072"}},[t._v("if")]),t._v(" 内部的局部变量覆盖了 "),a("font",{attrs:{color:"#FA8072"}},[t._v("if")]),t._v(" 外部的变量 "),a("font",{attrs:{color:"#FA8072"}},[t._v("a")]),t._v("。")],1),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("fn")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("fn")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//1")]),t._v("\n")])])]),a("p",[t._v("使用 "),a("font",{attrs:{color:"#FA8072"}},[t._v("let")]),t._v(" 声明变量，"),a("font",{attrs:{color:"#FA8072"}},[t._v("let")]),t._v(" 绑定了 "),a("font",{attrs:{color:"#FA8072"}},[t._v("if")]),t._v(" 的这个块级作用域，形成了封闭作用域，并且 "),a("font",{attrs:{color:"#FA8072"}},[t._v("let")]),t._v(" 不存在变量提升，不会影响到 "),a("font",{attrs:{color:"#FA8072"}},[t._v("if")]),t._v(" 外部的变量。因此 "),a("font",{attrs:{color:"#FA8072"}},[t._v("a")]),t._v(" 通过作用域链找到全局变量 "),a("font",{attrs:{color:"#FA8072"}},[t._v("a")]),t._v(" ,"),a("font",{attrs:{color:"#FA8072"}},[t._v("a")]),t._v(" 的值为1")],1),t._v(" "),a("p",[a("strong",[t._v("第二种场景，用来计数的循环变量泄露为全局变量。")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'hello'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//5")]),t._v("\n")])])]),a("p",[t._v("上面代码中，变量i只是用来控制循环，但是循环结束后，它并没有消失，泄漏成了全局变量。")]),t._v(" "),a("h3",{attrs:{id:"_4-let-和-const-拥有-暂时性死区-tdz"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-let-和-const-拥有-暂时性死区-tdz"}},[t._v("#")]),t._v(" 4.let 和 const 拥有 '暂时性死区' (TDZ)")]),t._v(" "),a("p",[a("strong",[t._v("什么是暂时性死区？")])]),t._v(" "),a("p",[t._v("通俗的讲：在代码块内，使用 "),a("font",{attrs:{color:"#FA8072"}},[t._v("let/const")]),t._v(" 命令声明变量之前，变量都是不可用的。这就是所谓的 '暂时性死区'。\n而在 "),a("font",{attrs:{color:"#FA8072"}},[t._v("var")]),t._v(" 声明之前就访问对应的变量，由于变量提升，则会得到 "),a("font",{attrs:{color:"#FA8072"}},[t._v("undefined")]),t._v("。")],1),t._v(" "),a("p",[t._v("造成这种差异的原因是因为作用域创建阶段JS引擎对两者初始化赋值不同。ES6 规定暂时性死区和 "),a("font",{attrs:{color:"#FA8072"}},[t._v("let、const")]),t._v(" 语句不出现ES5那样的变量提升，主要是为了减少运行时错误，防止在变量声明前就使用这个变量，从而导致意料之外的行为。")],1),t._v(" "),a("p",[t._v("如下，容易出错的点：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("bar")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("x "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" y"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" y "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" y"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("bar")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 报错")]),t._v("\n")])])]),a("p",[t._v("上面代码函数报错的原因是因为，参数 "),a("font",{attrs:{color:"#FA8072"}},[t._v("x")]),t._v(" 的默认值等于 "),a("font",{attrs:{color:"#FA8072"}},[t._v("y")]),t._v(",但此时  "),a("font",{attrs:{color:"#FA8072"}},[t._v("y")]),t._v(" 还没有声明，所以变量不可用，会报错。")],1),t._v(" "),a("p",[t._v("下面代码也会报错：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 不报错")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" x "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 报错")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" x "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ReferenceError: x is not defined")]),t._v("\n")])])]),a("p",[t._v("上面代码报错也是因为暂时性死区。使用let声明变量时，变量在还没有声明完成就使用，所以报错。")]),t._v(" "),a("h3",{attrs:{id:"_5-var可以重复声明-let不允许重复声明"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-var可以重复声明-let不允许重复声明"}},[t._v("#")]),t._v(" 5.var可以重复声明，let不允许重复声明")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 报错")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("func")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 报错")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("func")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h2",{attrs:{id:"let-const-的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#let-const-的区别"}},[t._v("#")]),t._v(" let / const 的区别")]),t._v(" "),a("p",[a("font",{attrs:{color:"#FA8072"}},[t._v("let ")]),t._v(" 声明的变量，值可以改变。")],1),t._v(" "),a("p",[a("font",{attrs:{color:"#FA8072"}},[t._v("const")]),t._v(" 声明的变量保证的变量指向的那个内存地址所保存的数据不得改动：")],1),t._v(" "),a("p",[a("strong",[t._v("对于基本类型的数据")]),a("br"),t._v("\n值就保存在变量指向的那个内存地址，因此等同于常量")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\na "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//Uncaught TypeError: Assignment to constant variable.")]),t._v("\n")])])]),a("p",[a("strong",[t._v("对于引用类型的数据")]),a("br"),t._v("\n变量指向的内存地址，保存的只是一个指向实际数据的指针， "),a("font",{attrs:{color:"#FA8072"}},[t._v("const")]),t._v(" 只能保证这个指针是固定的，至于它指向的数据结构是不是变的，就不能完全控制了")],1),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" obj "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nobj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"xiaoming"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('//{name: "xiaoming"}')]),t._v("\n\nobj "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//Uncaught TypeError: Assignment to constant variable.")]),t._v("\n")])])])])}),[],!1,null,null,null);s.default=r.exports}}]);