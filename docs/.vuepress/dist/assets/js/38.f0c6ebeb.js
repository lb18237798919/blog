(window.webpackJsonp=window.webpackJsonp||[]).push([[38],{401:function(t,e,a){"use strict";a.r(e);var s=a(42),n=Object(s.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"ajax"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ajax"}},[t._v("#")]),t._v(" Ajax")]),t._v(" "),a("p",[t._v("Ajax(asynchronous JavaScript and XML)是使用客户端上的许多 Web 技术，创建异步 Web 应用的一种 Web 开发技术。借助 Ajax，Web 应用可以异步（在后台）向服务器发送数据和从服务器检索数据，而不会干扰现有页面的显示和行为。通过将数据交换层与表示层分离，Ajax 允许网页和扩展 Web 应用程序动态更改内容，而无需重新加载整个页面。实际上，现在通常将 JSON 替换为 XML，因为 JavaScript 对 JSON 有原生支持优势。"),a("br"),t._v("\nXMLHttpRequest API 经常用于异步通信。此外还有最近流行的fetch API。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('let xmlhttp\nif (window.XMLHttpRequest) {\n\t//  IE7+, Firefox, Chrome, Opera, Safari 浏览器执行代码\n\txmlhttp = new XMLHttpRequest()\n} else {\n\t// IE6, IE5 浏览器执行代码\n\txmlhttp = new ActiveXObject("Microsoft.XMLHTTP")\n}\nxmlhttp.onreadystatechange = () => {\n\tif (xmlhttp.readyState === 4 && xmlhttp.status === 200) {\n\t\tdocument.getElementById("myDiv").innerHTML = xmlhttp.responseText\n\t}\n}\nxmlhttp.open("GET", "/ajax/test.txt", true)\nxmlhttp.send()\n')])])]),a("h2",{attrs:{id:"使用ajax的优缺点分别是什么"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用ajax的优缺点分别是什么"}},[t._v("#")]),t._v(" 使用Ajax的优缺点分别是什么")]),t._v(" "),a("p",[a("strong",[t._v("优点")])]),t._v(" "),a("ul",[a("li",[t._v("交互性更好。来自服务器的新内容可以动态更改，无需重新加载整个页面。")]),t._v(" "),a("li",[t._v("减少与服务器的连接，因为脚本和样式只需要被请求一次。")]),t._v(" "),a("li",[t._v("状态可以维护在一个页面上。JavaScript 变量和 DOM 状态将得到保持，因为主容器页面未被重新加载。")]),t._v(" "),a("li",[t._v("基本上包括大部分 SPA 的优点。")])]),t._v(" "),a("p",[a("strong",[t._v("缺点")])]),t._v(" "),a("ul",[a("li",[t._v("动态网页很难收藏。")]),t._v(" "),a("li",[t._v("如果 JavaScript 已在浏览器中被禁用，则不起作用。")]),t._v(" "),a("li",[t._v("有些网络爬虫不执行 JavaScript，也不会看到 JavaScript 加载的内容。")]),t._v(" "),a("li",[t._v("基本上包括大部分 SPA 的缺点。 搜索引擎优化比较难")])]),t._v(" "),a("p",[t._v("https://github.com/yangshun/front-end-interview-handbook/blob/master/questions/javascript-questions.md")]),t._v(" "),a("h4",{attrs:{id:""}},[a("a",{staticClass:"header-anchor",attrs:{href:"#"}},[t._v("#")])]),t._v(" "),a("h2",{attrs:{id:"ajax和fetch区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ajax和fetch区别"}},[t._v("#")]),t._v(" Ajax和Fetch区别")]),t._v(" "),a("ul",[a("li",[t._v("ajax是使用XMLHttpRequest对象发起的，但是用起来很麻烦，所以ES6新规范就有了fetch，fetch发一个请求不用像ajax那样写一大堆代码。")]),t._v(" "),a("li",[t._v("使用fetch无法取消一个请求，这是因为fetch基于Promise，而Promise无法做到这一点。")]),t._v(" "),a("li",[t._v("在默认情况下，fetch不会接受或者发送cookies")]),t._v(" "),a("li",[t._v("fetch没有办法原生监测请求的进度，而XMLHttpRequest可以")]),t._v(" "),a("li",[t._v("fetch只对网络请求报错，对400，500都当做成功的请求，需要封装去处理")]),t._v(" "),a("li",[t._v("fetch由于是ES6规范，兼容性上比不上XMLHttpRequest")])])])}),[],!1,null,null,null);e.default=n.exports}}]);